# Details:
#

# Pull base image.
FROM ubuntu:16.04
# Maintainer
MAINTAINER Rob Lassche <roblassche@yahoo.com>

RUN apt-get update \
	&& apt-get -y dist-upgrade -u \
	&& rm -rf /var/lib/apt/lists/*

RUN DEBIAN_FRONTEND=noninteractive apt-get update \
	&& apt-get install -y --no-install-recommends \
		vim \
		apache2 apache2-dev \
		apt-transport-https \
		net-tools inetutils-ping \
		ca-certificates \
		curl

# Copy the certificate files to the image
COPY certs/ /tmp
COPY apache2/printenv* /usr/lib/cgi-bin

# Update server certificate and key file in the config file 
# and copy the cert files to the apache directory
# sed /ServerAdmin/ APPEND does not work in the RUN cmd....???? Inside the running images it sed-command works..
RUN sed 's/ssl-cert-snakeoil.pem/srv_rotterdam01.local.cert.pem/' /etc/apache2/sites-available/default-ssl.conf > /tmp/1 \
    && sed 's/ssl-cert-snakeoil.key/srv_rotterdam01.local.key.pem/' /tmp/1  > /etc/apache2/sites-available/default-ssl.conf \
	&& cp /tmp/srv_rotterdam01.local.cert.pem /etc/ssl/certs/srv_rotterdam01.local.cert.pem \
	&& cp /tmp/srv_rotterdam01.local.key.pem /etc/ssl/private/srv_rotterdam01.local.key.pem \
	&& openssl x509 -in /tmp/ca.cert.pem -inform PEM -out /usr/local/share/ca-certificates/ca_the_company.cert.crt \
	&& update-ca-certificates

# enable cgi-bin
RUN	sed '/#.*Include.*serve-cgi-bin.conf/  s/#//g' /etc/apache2/sites-available/000-default.conf > /tmp/$$ \
	&& mv /tmp/$$ /etc/apache2/sites-available/000-default.conf \
	&& sed '/#.*Include.*serve-cgi-bin.conf/  s/#//g' /etc/apache2/sites-available/default-ssl.conf > /tmp/$$ \
	&& mv /tmp/$$ /etc/apache2/sites-available/default-ssl.conf
	


############################ markdown #######################
ADD apache2/discount-2.2.4 /opt/discount-2.2.4

# git clone https://github.com/hamano/apache-mod-markdown.git
ADD apache2/apache-mod-markdown /opt/apache-mod-markdown
COPY apache2/markdown.* /etc/apache2/mods-available/

RUN DEBIAN_FRONTEND=noninteractive apt-get update \
	&& apt-get install -y --no-install-recommends \
				build-essential libtool automake autoconf libmarkdown2-dev \
	&& cd /opt \
	&& echo "Installing discount" \
	&& cd /opt/discount-2.2.4 \
	&& ./configure.sh \
	&& make \
	&& make install \
	&& echo "Installing markdown" \
	&& cd /opt/apache-mod-markdown \
	&& autoreconf -f -i \
	&& ./configure --with-apxs=/usr/bin/apxs \
	&& make \
	&& make install \
	&& a2enmod markdown

############################ markdown #######################



##### server-info ###########################################
# Require all granted   in file 'mods-enabled/info.conf
#############################################################

##### server-status ###########################################
# Require all granted   in file 'mods-enabled/status.conf
#############################################################


################### SSL Secured directory #####################
# SSL secure directory
# Access is allowed with a client certificate for users
# in the 'Rotterdam Office' only.
###############################################################
# Insert a Directory for secure_directory
RUN mkdir /etc/apache2/ssl.crt \
	&& cp /tmp/ca.cert.pem /etc/apache2/ssl.crt \
	&& sed -i  '/#SSLCACertificateFile/a SSLCACertificateFile /etc/apache2/ssl.crt/ca.cert.pem' /etc/apache2/sites-available/default-ssl.conf \
	&& mkdir /var/www/secure_dir \
	&& sed -i  "/DocumentRoot/a \
Alias "/secure" "/var/www/secure_dir"\n \
<Directory /var/www/secure_dir>\n \
	SSLVerifyClient require\n \
    SSLVerifyDepth  1\n \
    SSLRequire ( %{SSL_CLIENT_S_DN_OU} in {\"Rotterdam Office\"} )\n\
    SSLOptions +StdEnvVars\n \
</Directory> " /etc/apache2/sites-available/default-ssl.conf

COPY apache2/secure/ /var/www/secure_dir



#COPY fixInImage.sh /tmp

# cgi-bin: enable alias, cgi
RUN a2enmod ssl \
	&& a2enmod alias \
	&& a2enmod cgi \
	&& a2ensite default-ssl.conf


RUN	sed -i '/ServerAdmin/a          ServerName srv_rotterdam01.local' /etc/apache2/sites-available/default-ssl.conf \
	&& cat /etc/apache2/sites-available/default-ssl.conf

ENV APACHE_RUN_USER www-data
ENV APACHE_RUN_GROUP www-data
ENV APACHE_LOG_DIR /var/log/apache2
ENV APACHE_PID_FILE /var/run/apache2.pid
ENV APACHE_RUN_DIR /var/run/apache2
ENV APACHE_LOCK_DIR /var/lock/apache2 env APACHE_LOG_DIR /var/log/apache2


EXPOSE 80 443
# WORKS

ENTRYPOINT ["/usr/sbin/apache2ctl", "-D", "FOREGROUND"]
